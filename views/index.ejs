<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"
    integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous" />
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
    crossorigin="anonymous" />
  <title>PokeNavi</title>
  <link rel="shortcut icon" type="image/png"
    href="https://raw.githubusercontent.com/PokeAPI/sprites/fe9b71b303647573cd61f92d9a43fd32a47d9c7d/sprites/items/poke-radar.png">
  <link rel="icon" type="image/png" sizes="32x32"
    href="https://raw.githubusercontent.com/PokeAPI/sprites/fe9b71b303647573cd61f92d9a43fd32a47d9c7d/sprites/items/poke-radar.png">
  <link rel="icon" type="image/png" sizes="16x16"
    href="https://raw.githubusercontent.com/PokeAPI/sprites/fe9b71b303647573cd61f92d9a43fd32a47d9c7d/sprites/items/poke-radar.png">
  <link rel="manifest" href="manifest.json">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=DynaPuff">

  <style>
    body {
      margin: 0;
      padding: 0;
      min-height: 100vh;
      background-color: #d04040;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .container {
      text-align: center;
      background-color: #d04040;
      max-width: 100%;
      max-height: 100%;
      padding: 10px;
    }

    .inv-container {
      display: inline-block;
      padding: 5px;
      margin-left: 0px;
      text-align: center;
      width: 100%;
      box-sizing: border-box;
    }

    .title {
      text-shadow:
        -1px -1px 0 #e7f3f4,  
        1px -1px 0 #e7f3f4,
        -1px 1px 0 #e7f3f4,
        1px 1px 0 #e7f3f4;
      text-align: center;
      font-size: 57px;
      font-weight: bold;
      text-align: center;
      font-family: 'DynaPuff', sans-serif;
    }

    .title-box {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 100%;
      height: 100%;
      text-align: center;
    }

    .sprite {
      image-rendering: pixelated;
      border: 2px solid #3c4d5b;
      background-color: #e7f3f4;
      border-radius: 50%;
      display: inline-block;
      vertical-align: middle;
      margin-left: 7px;
      width: 75px;
      height: 75px;
    }

    .btn-group {
      display: flex;
    }

    .btn-group .button {
      background-color: #7fa9d0;
      border: 1px solid black;
      color: #3c4d5b;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 16px;
      cursor: pointer;
      width: 100%;
      margin: 0 0px;
      box-sizing: border-box;
    }

    .btn-group .button:not(:last-child) {
      border-right: none;
    }

    .btn-group .button:hover {
      background-color: #64ace0;
    }

    select {
      font-family: 'DynaPuff', sans-serif;
    }

    .output-container {
      width: 100%;
      height: calc(100% - 40px);
      overflow-y: scroll;
      box-sizing: border-box;
      margin-left: 5px;
    }

    .bordered-window {
      border: 1px solid black;
      width: 100%;
      height: 550px;
      padding: 0 0 0 0px;
      margin-left: 0;
      margin-right: 0;
      text-align: left;
      background-color: #7fa9d0;
      list-style-type: none;
      box-sizing: border-box;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .text-input {
      border: 1px solid black;
      margin-top: 0 !important;
      margin-bottom: 0 !important;
    }

    .input-container {
      width: 100%;
      text-align: center;
    }

    input[type="text"] {
      width: 100%;
      text-align: center;
      margin: 10px 0;
      box-sizing: border-box;
    }

    button[type="submit"] {
      width: 100%;
      text-align: center;
      margin: 10px 0;
      color: #3c4d5b;
    }

    button {
      background-color: #7fa9d0;
      border: 1px solid black;
      color: white;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 16px;
      cursor: pointer;
      width: 100%;
      margin-top: 0 !important;
      margin-bottom: 0 !important;
      font-family: 'DynaPuff', sans-serif;
    }

    .inv-p {
      margin-bottom: 0px;
    }
  </style>
</head>

<body>
  <div class="container">
    <div class="inv-container">
      <div class="title-box">
        <div class="title">PokeNavi</div>
        <img class="sprite" id="sprite"
          src="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/poke-ball.png">
      </div>
      <div>
        <div class="btn-group">

          <select class="button" id="switch">
            <option value="">Pokémon</option>
            <% for (let i=0; i < allPokemon.length; i++) { %>
              <option value="<%= allPokemon[i].pokedexNumber %>">
                <%= allPokemon[i].species %>
              </option>
              <% } %>
          </select>
          <button class="button" id="create">Create</button>
          <button class="button" id="menu">Logout</button>
        </div>
        <p class="inv-p" style="clear:both"></p>
        <div class="bordered-window">
          <div class="output-container" id="outputContainer" style="overflow-y:scroll">Welcome to PokeNavi! Select a
            Pokemon from the drop-down to begin</div>
        </div>
      </div>
      <div class="input-container">
        <input class="text-input" type="text" id="prompt" />
        <button class="button" type="submit" id="submit">Submit</button>
      </div>
    </div>
  </div>
  </div>

  <audio id="myAudio">
    <source src="ping.mp3" type="audio/mpeg">
    Your browser does not support the audio element.
  </audio>
  <script>

    const submitButton = document.getElementById("submit");
    const menuButton = document.getElementById("menu");
    const createButton = document.getElementById("create");
    const userMessage = document.getElementById("prompt");
    const messages = document.getElementById("outputContainer");

    function populateDropdown(pokemonList) {
      const dropdown = document.getElementById('switch');
      dropdown.innerHTML = '';

      const defaultOption = document.createElement('option');
      defaultOption.value = "";
      defaultOption.text = "Pokémon";
      dropdown.add(defaultOption);

      for (const pokemon of pokemonList) {
        const option = document.createElement('option');
        option.value = pokemon.pokedexNumber;
        option.text = `${pokemon.species}`;
        dropdown.add(option);
      }
    }

    async function fetchPokemonList() {
      try {
        const response = await fetch('/api/pokemon-list');
        const data = await response.json();
        const pokemonList = data.allPokemon;
        populateDropdown(pokemonList);
      } catch (error) {
        console.error('Error fetching Pokemon list:', error);
      }
    }

    const scrollToBottom = () => {
      messages.scrollTop = messages.scrollHeight - messages.clientHeight;
    };

    const submitMessage = async () => {
      const message = userMessage.value;
      userMessage.value = "";

      const li = document.createElement("li");
      li.textContent = `   User: ${message}`;
      messages.appendChild(li);

      scrollToBottom()

      const response = await fetch("/prompt", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ userMessage: message })

      });

      const data = await response.json();
      const assistantResponse = data.assistantResponse;
      console.log(data.systemName)

      playSound()

      const liAssistant = document.createElement("li");
      liAssistant.textContent = `   ${assistantResponse}`;
      console.log(liAssistant.textContent);
      messages.appendChild(liAssistant);

      setTimeout(() => {
        scrollToBottom();
      }, 0);
    };

    submitButton.addEventListener("click", submitMessage);
    menuButton.addEventListener("click", logOut);

    function logOut() {

      fetch('/logout', { method: 'GET' })
        .then(response => {
          if (response.redirected) {
            window.location.href = response.url;
          }
        })
        .catch(error => {
          console.error('Error:', error);
        });

    }

    function createPokemon() {
      fetch('/create')
    }

    const switchPrompt = async () => {
      submitButton.disabled = true;
      const pokedexNumber = document.getElementById("switch").value;
      console.log(pokedexNumber)
      const response = await fetch("/switch", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ pokedexNumber: pokedexNumber })
      });

      const data = await response.json();
      console.log(data)
      const assistantResponse = data.assistantResponse || `Switched to ${data.pokedexNumber}`;

      const pokemonImg = document.getElementById("sprite");
      const cacheBuster = new Date().getTime();

      if (pokedexNumber === "133") {
        pokemonImg.src = `https://raw.githubusercontent.com/PokeAPI/sprites/fe9b71b303647573cd61f92d9a43fd32a47d9c7d/sprites/pokemon/versions/generation-iii/firered-leafgreen/shiny/133.png`;
      } else {
        pokemonImg.src = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokedexNumber}.png?${cacheBuster}`;
      }

      messages.innerHTML = "";

      const liAssistant = document.createElement("li");
      liAssistant.textContent = `${assistantResponse}`;
      messages.appendChild(liAssistant);

      scrollToBottom();

      const delay = ms => new Promise(res => setTimeout(res, ms));
      await delay(3000);

      submitButton.disabled = false;
    };

    function playSound() {
      var audio = document.getElementById("myAudio");
      if (audio !== null) {
        audio.volume = 0.3;
        audio.play();
      }
    }

    userMessage.addEventListener("keydown", (e) => {
      if (e.key === "Enter") {
        e.preventDefault();
        submitMessage();
      }
    });

    const switchDropdown = document.getElementById("switch");

    switchDropdown.addEventListener("change", async () => {
      if (switchDropdown.value) {
        messages.innerHTML = "Switching!";
        await switchPrompt();
        switchDropdown.value = "";
      }
    });

    window.addEventListener('DOMContentLoaded', () => {
      fetchPokemonList();
      submitButton.disabled = true;
    });

    document.getElementById('create').addEventListener('click', function () {
      window.location.href = "create";
    });

  </script>
</body>

</html>